@model Model.engage_major_releaseModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <link href="~/css/table.css" rel="stylesheet" />
    <link href="~/css/cwcalendar.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/comm/comm.js"></script>
    <script src="~/Scripts/comm/list.js"></script>
    <script src="~/Scripts/select.js"></script>
    <script src="~/Scripts/calendar-ch.js"></script>
    <script src="~/Scripts/locate.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/select.js"></script>
    <script type="text/javascript">
        window.onload = check;
        function tick() {
            var now = new Date();
            var hours, minutes, seconds, noon;
            var intHours, intMinutes, intSeconds;
            intHours = now.getHours();
            intMinutes = now.getMinutes();
            intSeconds = now.getSeconds();
            if (intHours < 24) {
                hours = intHours + ":";
                noon = "A.M.";
            } else {
                intHours = intHours - 24;
                hours = intHours + ":";
                noon = "P.M.";
            }
            if (intMinutes < 10) {
                minutes = "0" + intMinutes + ":";
            } else {
                minutes = intMinutes + ":";
            }
            if (intSeconds < 10) {
                seconds = "0" + intSeconds + " ";
            } else {
                seconds = intSeconds + " ";
            }
            timeString = hours + minutes + seconds;
            var now = new Date();
            document.getElementById("nowTime").value = now.getFullYear() + "-" + (now.getMonth() + 1) + "-" + now.getDate() + " " + timeString;
            window.setTimeout("tick();", 1000);
        }

        //load事件
        function check() {
            //获得系统当前时间的方法
            tick();
        }
    </script>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Ajax.BeginForm("Edit", new AjaxOptions() { HttpMethod = "Post" }))
    {
        <table width="100%">
            <tr>
                <td>
                    <font color="black">您正在做的业务是：人力资源--招聘管理--职位发布管理--职位发布变更 </font>
                </td>
            </tr>
            <tr>
                <td align="right">
                    <input type="submit" value="提交" class="BUTTON_STYLE1" />
                    <input type="reset" value="清除" class="BUTTON_STYLE1">
                </td>
            </tr>
        </table>
            <table width="100%" border="1" cellpadding=0 cellspacing=1
                   bordercolorlight=#848284 bordercolordark=#eeeeee
                   class="TABLE_STYLE1">
                <tr>
                    <td style="display:none">
                        @Html.EditorFor(model => model.first_kind_id, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.first_kind_name, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.second_kind_id, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.second_kind_name, new { htmlAttributes = new { @class = "INPUT_STYLE1"} })
                        @Html.EditorFor(model => model.third_kind_id, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.third_kind_name, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.major_id, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.major_name, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.major_kind_id, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.major_kind_name, new { htmlAttributes = new { @class = "INPUT_STYLE1"} })
                        @Html.EditorFor(model => model.register, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                        @Html.EditorFor(model => model.regist_time, new { htmlAttributes = new { @class = "INPUT_STYLE1" } })
                    </td>
                    <td class="TD_STYLE1" width="11%">
                        I级机构
                    </td>
                    <td width="14%" class="TD_STYLE2">
                        @Html.Label(Model.first_kind_name)
                    </td>
                    <td width="11%" class="TD_STYLE1">
                        II级机构
                    </td>
                    <td width="14%" class="TD_STYLE2">
                        @Html.Label(Model.second_kind_name)
                    </td>
                    <td width="11%" class="TD_STYLE1">
                        III级机构
                    </td>
                    <td class="TD_STYLE2">
                        @Html.Label(Model.third_kind_name)
                    </td>
                    <td width="11%" class="TD_STYLE1">
                        招聘类型
                    </td>
                    <td class="TD_STYLE2" colspan="2">

                        <select name="engage_type" id="engage_type" class="SELECT_STYLE1">
                            <option value="校园招聘" selected>校园招聘</option>
                            <option value="社会招聘" selected>社会招聘</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        职位分类
                    </td>
                    <td class="TD_STYLE2">
                        @Html.Label(Model.major_kind_name)
                    </td>
                    <td class="TD_STYLE1">
                        职位名称
                    </td>
                    <td class="TD_STYLE2">
                        @Html.Label(Model.major_name)
                    <td class="TD_STYLE1">
                        招聘人数
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.human_amount, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.human_amount, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        截止日期
                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" name="deadline"
                               class="INPUT_STYLE2" onclick="aa('emajorRelease.deadline')" value="2012-11-15">
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        变更人
                    </td>
                    <td class="TD_STYLE2">
                        @Html.EditorFor(model => model.changer, new { htmlAttributes = new { @class = "INPUT_STYLE2" } })
                        @Html.ValidationMessageFor(model => model.changer, "", new { @class = "text-danger" })
                    </td>
                    <td class="TD_STYLE1">
                        变更时间
                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" name="change_time"
                               value="12-11-18 19:26:58.000" id="nowTime"
                               class="INPUT_STYLE2">
                    </td>

                    <td>&nbsp; </td>
                    <td>&nbsp; </td>
                    <td>&nbsp; </td>
                    <td>&nbsp; </td>

                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        职位描述
                    </td>
                    <td class="TD_STYLE2" colspan="8">
                        @Html.EditorFor(model => model.major_describe, new { htmlAttributes = new { @class = "TEXTAREA_STYLE1" } })
                        @Html.ValidationMessageFor(model => model.major_describe, "", new { @class = "text-danger" })
                    </td>

                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        招聘要求
                    </td>
                    <td class="TD_STYLE2" colspan="8">
                        @Html.EditorFor(model => model.engage_required, new { htmlAttributes = new { @class = "TEXTAREA_STYLE1" } })
                        @Html.ValidationMessageFor(model => model.engage_required, "", new { @class = "text-danger" })
                    </td>

                </tr>
            </table>
    }
</body>
</html>
